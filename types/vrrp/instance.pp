type Keepalived::Vrrp::Instance = Struct[{
  Optional[use_vmac] => Variant[Boolean, String],
  Optional[version] => Integer[2, 3],
  Optional[vmac_xmit_base] => Boolean,
  Optional[state] => Enum['MASTER', 'BACKUP'],
  Optional[interface] => String,
  Optional[accept] => Boolean,
  Optional[no_accept] => Boolean,
  Optional[track_interface] => Array[String],
  Optional[track_script] => Array[String],
  Optional[dont_track_primary] => String,
  Optional[mcast_src_ip] => String,
  Optional[unicast_src_ip] => String,
  Optional[unicast_peer] => Array[String],
  Optional[garp_master_delay] => Integer[1],
  Optional[garp_master_repeat] => Integer[1],
  Optional[garp_lower_priority_delay] => Integer[1],
  Optional[garp_lower_priority_repeat] => Integer[1],
  Optional[garp_master_refresh] => Integer[1],
  Optional[garp_master_refresh_repeat] => Integer[1],
  virtual_router_id => Integer[1, 255],
  Optional[priority] => Integer[-1, 255],
  Optional[advert_int] => Variant[Integer, Float],
  Optional[lower_prio_no_advert] => Enum['yes', 'no'],
  Optional[higher_prio_send_advert] => Enum['yes', 'no'],
  Optional[authentication] => Keepalived::Vrrp::Instance::Authentication,
  Optional[virtual_ipaddress] => Array[String],
  Optional[virtual_ipaddress_excluded] => Array[String],
  Optional[promote_secondaries] => Boolean,
  Optional[virtual_routes] => Array[String],
  Optional[virtual_rules] => Array[String],
  Optional[nopreempt] => Boolean,
  Optional[preempt_delay] => Integer[0, 1000],
  Optional[strict_mode] => Enum['yes', 'no'],
  Optional[debug] => Integer[0, 4],
  Optional[notify_master] => String,
  Optional[notify_backup] => String,
  Optional[notify_fault] => String,
  Optional[notify_stop] => String,
  Optional[notify_all] => String,
  Optional[smtp_alert] => Boolean,
  Optional[ensure] => Enum['present', 'absent']
}]
